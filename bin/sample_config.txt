[rpi_clock]

# Temperature units: metric (Celsius), imperial (Farenheit), or Kelvin
TEMP_UNITS = metric
# TEMP_UNITS = imperial

# Date format is USA here:
FORMAT_DATE = %%b %%d, %%Y
#
#Sortable date:
#FORMAT_DATE = %%Y-%%m-%%d
#
# (Yes, you need to double '%' to get one '%' as needed by source code.)
# Date and Time tutorial:   https://www.tutorialspoint.com/python3/time_strftime.htm

# Hours:Minutes + AM/PM for the USA
FORMAT_TIME = %%I:%%M %%p %%Z 
#
# 24-hour clock:
#FORMAT_TIME = %%H:%%M %%Z
#
# (Yes, you need to double '%' to get one '% as needed by source code'.)
# Date and Time tutorial:   https://www.tutorialspoint.com/python3/time_strftime.htm

# False ==> full screen (normal for TFT)
# True ==> PC or laptop display
FLAG_WINDOWED = False

# The amount of time between URL contact attempts in milliseconds
# This is also the clock tick length in milliseconds.
SLEEP_TIME_MSEC = 3000
#                 ^^^^ Update display every 3 seconds.

# ====== #
# Colors #
# ====== #
# Values permitted: https://wiki.tcl-lang.org/page/Colors+with+Names
#                   Examples: red, white, black, green, blue, cyan, yellow, and magenta

# Root window background color
BG_COLOR_ROOT = MediumPurple2

# Popup for operator action background color
BG_COLOR_POPUP = green

# Foreground normal text color
FG_COLOR_NORMAL = white

# Foreground text color when something went wrong
FG_COLOR_ALARM = magenta

# =================================================== #
# Not recommended to change the remaining parameters.
# =================================================== #

# Fetch weather after this many main loop executions
COUNT_START = 20

# Verbose tracing
FLAG_TRACING = False

# Timeout in seconds if URL server does not respond in time
REQUEST_TIMEOUT_SEC = 60

# Latitude and longitude of location (negative indicates S or W, no space after the comma)
LAT_LONG = 37.2296,-80.4139
